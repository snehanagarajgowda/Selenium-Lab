package pac1;

import org.testng.annotations.Test;

import io.github.bonigarcia.wdm.WebDriverManager;

import org.testng.annotations.BeforeMethod;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.DataProvider;
import org.testng.annotations.BeforeClass;
import java.time.Duration;
import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeSuite;
import org.testng.annotations.AfterSuite;

public class TC009_TestNG {
  @Test(dataProvider = "dp")
  public void f(Integer n, String s) {
	  System.out.println("This is the test");
  

    WebDriverManager.chromedriver().setup();

	WebDriver driver=new ChromeDriver();

	driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));

	driver.get("https://opensource-demo.orangehrmlive.com/web/index.php/auth/login");

	WebElement uname=driver.findElement(By.name("username"));

	if(uname.isDisplayed())

	{

		uname.sendKeys("Admin");

	System.out.println("Get placeholder:"+uname.getAttribute("placeholder"));

	}

	else

	{

		System.out.println("username is not displayed");

	}

	driver.findElement(By.name("password")).sendKeys("admin123");

	driver.findElement(By.name("username")).sendKeys(Keys.ENTER);

	driver.quit();


  }
  
		
  @BeforeMethod
  public void beforeMethod() {
	  System.out.println("This is the Before Method");
	  
  }

  @AfterMethod
  public void afterMethod() {
	  System.out.println("This is the After Method");
  }


  @DataProvider
  public Object[][] dp() {
    return new Object[][] {
      new Object[] { 1, "a" },
      new Object[] { 2, "b" },
    };
  }
  @BeforeClass
  public void beforeClass() {
	  System.out.println("This is Before Class");
  }

  @AfterClass
  public void afterClass() {
	  System.out.println("This is After Class");
  }

  @BeforeTest
  public void beforeTest() {
	  System.out.println("This is Before Test");
  }

  @AfterTest
  public void afterTest() {
	  System.out.println("This is After Test");
  }

  @BeforeSuite
  public void beforeSuite() {
	  System.out.println("This is Before Suite");
	  
	  
  }

  @AfterSuite
  public void afterSuite() {
	  System.out.println("This is After Suite");
  }

}
